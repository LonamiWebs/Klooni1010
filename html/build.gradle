import de.richsource.gradle.plugins.gwt.GwtSuperDev

apply plugin: "java"
apply plugin: "jetty"

sourceCompatibility = 1.8
targetCompatibility = 1.8
sourceSets.main.java.srcDirs = ["src/"]

gwt {
    gwtVersion = '2.8.2' // Should match the gwt version used for building the gwt backend
    maxHeapSize = "1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize = "1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'io.github.lonamiwebs.klooni.GdxDefinition'
    devModules 'io.github.lonamiwebs.klooni.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler {
        strict = true
        disableCastChecking = true
    }
}

task draftRun(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp = draftWar.archivePath
    daemon = true
}

task superDev(type: GwtSuperDev) {
    dependsOn draftRun
    doFirst {
        gwt.modules = gwt.devModules
    }
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
        }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

draftWar {
    from "war"
}

task addSource << {
    sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

eclipse.project {
    name = appName + "-html"
}
